esphome:
  name: openthread

esp32:
  board: esp32-c6-devkitm-1
  variant: esp32c6
  framework:
    type: esp-idf
    version: "5.3.0"
    platform_version: "https://github.com/pioarduino/platform-espressif32/releases/download/53.03.10%%2Brc1/platform-espressif32.zip"

network:
  enable_ipv6: true

openthread:
  channel: 13
  network_name: OpenThread-8f28
  network_key: dfd34f0f05cad978ec4e32b0413038ff
  panid: 0x8f28
  extpanid: d63e8e3e495ebbc3
  pskc: c23a76e98f1a6483639b1ac1271e2e27

# The web server will cause the HA integration to fail, see note in the README
# web_server:
#   port: 80

api:
  encryption:
    key: CXybYc0oErjlPMacNX70d2rHshyLv/FPDrJO4Yrs+Ho=

# This is the "Boot" button on my dev board
binary_sensor:
  - platform: gpio
    id: button1
    name: "Button"
    publish_initial_state: true
    pin:
      number: GPIO9
      mode: INPUT_PULLUP
      inverted: true

light:
  - platform: esp32_rmt_led_strip
    chipset: WS2812
    pin: GPIO8
    num_leds: 1
    rmt_channel: 0
    name: "Status LED RGB"
    id: statusledlight
    icon: "mdi:led-outline"
    rgb_order: GRB

# text_sensor:
#   - platform: template
#     name: "OTT Thread RLOC16"
#     lambda: |-
#       if (!esp_openthread_lock_acquire(1)) {
#           return {"Unknown"};
#       }
#       auto instance = esp_openthread_get_instance();
#       auto rloc16 = otThreadGetRloc16(instance);
#       esp_openthread_lock_release();
#       char buf[10];
#       snprintf(buf, sizeof(buf), "%04x", rloc16);
#       return {buf};
#   - platform: template
#     name: "OTT Thread Role"
#     lambda: |-
#       if (!esp_openthread_lock_acquire(1)) {
#           return {"Unknown"};
#       }
#       auto instance = esp_openthread_get_instance();
#       auto role = otThreadDeviceRoleToString(otThreadGetDeviceRole(instance));
#       esp_openthread_lock_release();
#       return {role};
