---
esphome:
  name: $device_name
  comment: $device_comment
  build_path: build/test3
  on_boot:
    - if:
        condition:
          - api.connected
          - wifi.connected
          - time.has_time
        then:
          - logger.log: Have time

esp8266:
  board: d1_mini
  early_pin_init: true

substitutions:
  device_name: test3
  device_comment: test3 device

api:
  port: 8000
  password: pwd
  reboot_timeout: 0min
  encryption:
    key: bOFFzzvfpg5DB94DuBGLXD/hMnhpDKgP9UQyBulwWVU=
  services:
    - service: hello_world
      variables:
        name: string
      then:
        - logger.log:
            format: Hello World %s!
            args:
              - name.c_str()

    - service: battery_level_percent
      variables:
        level_percent: int
      then:
        - tm1651.set_level_percent:
            id: tm1651_battery
            level_percent: !lambda "return level_percent;"
    - service: battery_level
      variables:
        level: int
      then:
        - tm1651.set_level:
            id: tm1651_battery
            level: !lambda "return level;"
    - service: battery_brightness
      variables:
        brightness: int
      then:
        - tm1651.set_brightness:
            id: tm1651_battery
            brightness: !lambda "return brightness;"
    - service: battery_turn_on
      then:
        - tm1651.turn_on:
            id: tm1651_battery
    - service: battery_turn_on
      then:
        - tm1651.turn_off:
            id: tm1651_battery
    - service: pid_set_control_parameters
      then:
        - climate.pid.set_control_parameters:
            id: pid_climate
            kp: 1.0
            kd: 1.0
            ki: 1.0

wifi:
  ssid: "MySSID"
  password: "password1"

network:
  enable_ipv6: true

uart:
  - id: uart_1
    tx_pin:
      number: GPIO1
      inverted: true
      allow_other_uses: true
    rx_pin:
      allow_other_uses: true
      number: GPIO3
    baud_rate: 115200
  - id: uart_2
    tx_pin:
      allow_other_uses: true
      number: GPIO4
    rx_pin:
      allow_other_uses: true
      number: GPIO5
    baud_rate: 9600
  - id: uart_3
    tx_pin:
      allow_other_uses: true
      number: GPIO4
    rx_pin:
      allow_other_uses: true
      number: GPIO5
    baud_rate: 4800
  - id: uart_4
    tx_pin:
      allow_other_uses: true
      number: GPIO4
    rx_pin:
      allow_other_uses: true
      number: GPIO5
    baud_rate: 9600
  - id: uart_5
    tx_pin:
      allow_other_uses: true
      number: GPIO4
    rx_pin:
      allow_other_uses: true
      number: GPIO5
    baud_rate: 9600
  - id: uart_6
    tx_pin:
      allow_other_uses: true
      number: GPIO4
    rx_pin:
      allow_other_uses: true
      number: GPIO5
    baud_rate: 9600
  - id: uart_9
    tx_pin:
      allow_other_uses: true
      number: GPIO4
    rx_pin:
      allow_other_uses: true
      number: GPIO5
    baud_rate: 9600
  - id: uart_10
    tx_pin:
      allow_other_uses: true
      number: GPIO4
    rx_pin:
      allow_other_uses: true
      number: GPIO5
    baud_rate: 9600
  - id: uart_11
    tx_pin:
      allow_other_uses: true
      number: GPIO4
    rx_pin:
      allow_other_uses: true
      number: GPIO5
    baud_rate: 9600

modbus:
  uart_id: uart_1

ota:
  safe_mode: true
  port: 3286
  reboot_timeout: 15min

logger:
  hardware_uart: UART1
  level: DEBUG
  esp8266_store_log_strings_in_flash: true

debug:

improv_serial:
  next_url: https://esphome.io/?name={{device_name}}&version={{esphome_version}}&ip={{ip_address}}

deep_sleep:
  run_duration: 20s
  sleep_duration: 50s

adalight:

sensor:
  - platform: homeassistant
    entity_id: sensor.hello_world
    id: ha_hello_world
  - platform: pzem004t
    uart_id: uart_3
    voltage:
      name: PZEM004T Voltage
    current:
      name: PZEM004T Current
    power:
      name: PZEM004T Power
  - platform: pzemac
    id: pzemac1
    voltage:
      name: PZEMAC Voltage
    current:
      name: PZEMAC Current
    power:
      name: PZEMAC Power
    energy:
      name: PZEMAC Energy
    frequency:
      name: PZEMAC Frequency
    power_factor:
      name: PZEMAC Power Factor
  - platform: pzemdc
    id: pzemdc1
    voltage:
      name: PZEMDC Voltage
    current:
      name: PZEMDC Current
    power:
      name: PZEMDC Power
    energy:
      name: PZEMDC Energy
  - platform: pmsx003
    uart_id: uart_9
    type: PMSX003
    pm_1_0:
      name: PM 1.0 Concentration
    pm_2_5:
      name: PM 2.5 Concentration
    pm_10_0:
      name: PM 10.0 Concentration
    pm_1_0_std:
      name: PM 1.0 Standard Atmospher Concentration
    pm_2_5_std:
      name: PM 2.5 Standard Atmospher Concentration
    pm_10_0_std:
      name: PM 10.0 Standard Atmospher Concentration
    pm_0_3um:
      name: Particulate Count >0.3um
    pm_0_5um:
      name: Particulate Count >0.5um
    pm_1_0um:
      name: Particulate Count >1.0um
    pm_2_5um:
      name: Particulate Count >2.5um
    pm_5_0um:
      name: Particulate Count >5.0um
    pm_10_0um:
      name: Particulate Count >10.0um
    update_interval: 30s
  - platform: pmsx003
    uart_id: uart_5
    type: PMS5003T
    pm_1_0:
      name: PM 1.0 Concentration
    pm_2_5:
      name: PM 2.5 Concentration
    pm_10_0:
      name: PM 10.0 Concentration
    pm_1_0_std:
      name: PM 1.0 Standard Atmospher Concentration
    pm_2_5_std:
      name: PM 2.5 Standard Atmospher Concentration
    pm_10_0_std:
      name: PM 10.0 Standard Atmospher Concentration
    pm_0_3um:
      name: Particulate Count >0.3um
    pm_0_5um:
      name: Particulate Count >0.5um
    pm_1_0um:
      name: Particulate Count >1.0um
    pm_2_5um:
      name: Particulate Count >2.5um
    temperature:
      name: PMS Temperature
    humidity:
      name: PMS Humidity
  - platform: pmsx003
    uart_id: uart_6
    type: PMS5003ST
    pm_1_0:
      name: PM 1.0 Concentration
    pm_2_5:
      name: PM 2.5 Concentration
    pm_10_0:
      name: PM 10.0 Concentration
    pm_1_0_std:
      name: PM 1.0 Standard Atmospher Concentration
    pm_2_5_std:
      name: PM 2.5 Standard Atmospher Concentration
    pm_10_0_std:
      name: PM 10.0 Standard Atmospher Concentration
    pm_0_3um:
      name: Particulate Count >0.3um
    pm_0_5um:
      name: Particulate Count >0.5um
    pm_1_0um:
      name: Particulate Count >1.0um
    pm_2_5um:
      name: Particulate Count >2.5um
    pm_5_0um:
      name: Particulate Count >5.0um
    pm_10_0um:
      name: Particulate Count >10.0um
    temperature:
      name: PMS Temperature
    humidity:
      name: PMS Humidity
    formaldehyde:
      name: PMS Formaldehyde Concentration
  - platform: sdm_meter
    phase_a:
      current:
        name: Phase A Current
      voltage:
        name: Phase A Voltage
      active_power:
        name: Phase A Power
      power_factor:
        name: Phase A Power Factor
      apparent_power:
        name: Phase A Apparent Power
      reactive_power:
        name: Phase A Reactive Power
      phase_angle:
        name: Phase A Phase Angle
    phase_b:
      current:
        name: Phase B Current
      voltage:
        name: Phase B Voltage
      active_power:
        name: Phase B Power
      power_factor:
        name: Phase B Power Factor
      apparent_power:
        name: Phase B Apparent Power
      reactive_power:
        name: Phase B Reactive Power
      phase_angle:
        name: Phase B Phase Angle
    phase_c:
      current:
        name: Phase C Current
      voltage:
        name: Phase C Voltage
      active_power:
        name: Phase C Power
      power_factor:
        name: Phase C Power Factor
      apparent_power:
        name: Phase C Apparent Power
      reactive_power:
        name: Phase C Reactive Power
      phase_angle:
        name: Phase C Phase Angle
    frequency:
      name: Frequency
    import_active_energy:
      name: Import Active Energy
    export_active_energy:
      name: Export Active Energy
    import_reactive_energy:
      name: Import Reactive Energy
    export_reactive_energy:
      name: Export Reactive Energy
  - platform: smt100
    uart_id: uart_10
    counts:
      name: Counts
    dielectric_constant:
      name: Dielectric Constant
    temperature:
      name: Temperature
    moisture:
      name: Moisture
    voltage:
      name: Voltage
    update_interval: 60s

time:
  - platform: homeassistant

binary_sensor:
  - platform: homeassistant
    entity_id: binary_sensor.hello_world
    id: ha_hello_world_binary

  - platform: template
    id: pzemac_reset_energy
    on_press:
      then:
        - pzemac.reset_energy: pzemac1
  - platform: template
    id: pzemdc_reset_energy
    on_press:
      then:
        - pzemdc.reset_energy: pzemdc1

  - platform: gpio
    id: bin1
    pin:
      allow_other_uses: true
      number: 1
  - platform: gpio
    id: bin2
    pin:
      allow_other_uses: true
      number: 2
  - platform: gpio
    id: bin3
    pin:
      allow_other_uses: true
      number: 3

globals:
  - id: my_global_string
    type: std::string
    initial_value: '""'

status_led:
  pin:
    allow_other_uses: true
    number: GPIO2

text_sensor:
  - platform: version
    name: ESPHome Version
    icon: mdi:icon
    id: version_sensor
    on_value:
      # yamllint disable rule:line-length
      - lambda: !lambda |-
          ESP_LOGD("main", "The state is %s=%s", x.c_str(), id(version_sensor).state.c_str());
      # yamllint enable rule:line-length
      - script.execute: my_script
      - script.wait: my_script
      - script.stop: my_script
      - homeassistant.service:
          service: notify.html5
          data:
            title: New Humidity
          data_template:
            message: The humidity is {{ my_variable }}%.
          variables:
            my_variable: |-
              return id(version_sensor).state;
  - platform: template
    name: Template Text Sensor
    lambda: |-
      return {"Hello World"};
  - platform: homeassistant
    entity_id: sensor.hello_world2
    id: ha_hello_world2

script:
  - id: my_script
    then:
      - lambda: 'ESP_LOGD("main", "Hello World!");'

switch:
  - platform: gpio
    id: gpio_switch1
    pin:
      allow_other_uses: true
      number: 1
  - platform: gpio
    id: gpio_switch2
    pin:
      allow_other_uses: true
      number: 2
  - platform: gpio
    id: gpio_switch3
    pin:
      allow_other_uses: true
      number: 3

climate:
  - platform: thermostat
    name: Thermostat Climate
    sensor: ha_hello_world
    humidity_sensor: ha_hello_world
    preset:
      - name: Default Preset
        default_target_temperature_low: 18°C
        default_target_temperature_high: 24°C
      - name: Away
        default_target_temperature_low: 16°C
        default_target_temperature_high: 20°C
    idle_action:
      - switch.turn_on: gpio_switch1
    cool_action:
      - switch.turn_on: gpio_switch2
    supplemental_cooling_action:
      - switch.turn_on: gpio_switch3
    heat_action:
      - switch.turn_on: gpio_switch1
    supplemental_heating_action:
      - switch.turn_on: gpio_switch3
    dry_action:
      - switch.turn_on: gpio_switch2
    fan_only_action:
      - switch.turn_on: gpio_switch1
    auto_mode:
      - switch.turn_on: gpio_switch2
    off_mode:
      - switch.turn_on: gpio_switch1
    heat_mode:
      - switch.turn_on: gpio_switch2
    cool_mode:
      - switch.turn_on: gpio_switch1
    dry_mode:
      - switch.turn_on: gpio_switch2
    fan_only_mode:
      - switch.turn_on: gpio_switch1
    fan_mode_auto_action:
      - switch.turn_on: gpio_switch2
    fan_mode_on_action:
      - switch.turn_on: gpio_switch1
    fan_mode_off_action:
      - switch.turn_on: gpio_switch2
    fan_mode_low_action:
      - switch.turn_on: gpio_switch1
    fan_mode_medium_action:
      - switch.turn_on: gpio_switch2
    fan_mode_high_action:
      - switch.turn_on: gpio_switch1
    fan_mode_middle_action:
      - switch.turn_on: gpio_switch2
    fan_mode_focus_action:
      - switch.turn_on: gpio_switch1
    fan_mode_diffuse_action:
      - switch.turn_on: gpio_switch2
    fan_mode_quiet_action:
      - switch.turn_on: gpio_switch1
    swing_off_action:
      - switch.turn_on: gpio_switch2
    swing_horizontal_action:
      - switch.turn_on: gpio_switch1
    swing_vertical_action:
      - switch.turn_on: gpio_switch2
    swing_both_action:
      - switch.turn_on: gpio_switch1
    startup_delay: true
    supplemental_cooling_delta: 2.0
    cool_deadband: 0.5
    cool_overrun: 0.5
    min_cooling_off_time: 300s
    min_cooling_run_time: 300s
    max_cooling_run_time: 600s
    supplemental_heating_delta: 2.0
    heat_deadband: 0.5
    heat_overrun: 0.5
    min_heating_off_time: 300s
    min_heating_run_time: 300s
    max_heating_run_time: 600s
    min_fanning_off_time: 30s
    min_fanning_run_time: 30s
    min_fan_mode_switching_time: 15s
    min_idle_time: 30s
    set_point_minimum_differential: 0.5
    fan_only_action_uses_fan_mode_timer: true
    fan_only_cooling: true
    fan_with_cooling: true
    fan_with_heating: true
  - platform: pid
    id: pid_climate
    name: PID Climate Controller
    sensor: ha_hello_world
    humidity_sensor: ha_hello_world
    default_target_temperature: 21°C
    heat_output: my_slow_pwm
    control_parameters:
      kp: 0.0
      ki: 0.0
      kd: 0.0
      max_integral: 0.0
      output_averaging_samples: 1
      derivative_averaging_samples: 1
    deadband_parameters:
      threshold_high: 0.4
      threshold_low: -2.0
      kp_multiplier: 0.0
      ki_multiplier: 0.0
      kd_multiplier: 0.0
      deadband_output_averaging_samples: 1

sprinkler:
  - id: yard_sprinkler_ctrlr
    main_switch: Yard Sprinklers
    auto_advance_switch: Yard Sprinklers Auto Advance
    reverse_switch: Yard Sprinklers Reverse
    pump_start_pump_delay: 2s
    pump_stop_valve_delay: 4s
    pump_switch_off_during_valve_open_delay: true
    valve_open_delay: 5s
    valves:
      - valve_switch: Yard Valve 0
        enable_switch: Enable Yard Valve 0
        pump_switch_id: gpio_switch1
        run_duration: 10s
        valve_switch_id: gpio_switch2
      - valve_switch: Yard Valve 1
        enable_switch: Enable Yard Valve 1
        pump_switch_id: gpio_switch1
        run_duration: 10s
        valve_switch_id: gpio_switch2
      - valve_switch: Yard Valve 2
        enable_switch: Enable Yard Valve 2
        pump_switch_id: gpio_switch1
        run_duration: 10s
        valve_switch_id: gpio_switch2
  - id: garden_sprinkler_ctrlr
    main_switch: Garden Sprinklers
    auto_advance_switch: Garden Sprinklers Auto Advance
    reverse_switch: Garden Sprinklers Reverse
    valve_overlap: 5s
    valves:
      - valve_switch: Garden Valve 0
        enable_switch: Enable Garden Valve 0
        pump_switch_id: gpio_switch1
        run_duration: 10s
        valve_switch_id: gpio_switch2
      - valve_switch: Garden Valve 1
        enable_switch: Enable Garden Valve 1
        pump_switch_id: gpio_switch1
        run_duration: 10s
        valve_switch_id: gpio_switch2

output:
  - platform: slow_pwm
    pin:
      allow_other_uses: true
      number: GPIO5
    id: my_slow_pwm
    period: 15s
    restart_cycle_on_state_change: false

light:
  - platform: neopixelbus
    name: Neopixelbus Light
    pin:
      allow_other_uses: true
      number: GPIO1
    type: GRBW
    variant: SK6812
    method: ESP8266_UART0
    num_leds: 100
    effects:
      - adalight:
          uart_id: uart_3
  - platform: sonoff_d1
    uart_id: uart_2
    use_rm433_remote: false
    name: Sonoff D1 Dimmer
    id: d1_light
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: shelly_dimmer
    name: "Shelly Dimmer Light"
    power:
      name: "Shelly Dimmer Power"
    voltage:
      name: "Shelly Dimmer Voltage"
    current:
      name: "Shelly Dimmer Current"
    max_brightness: 500
    firmware: "51.6"
    uart_id: uart_11
    nrst_pin:
      number: 5
      allow_other_uses: true
    boot0_pin:
      number: 4
      allow_other_uses: true

sim800l:
  uart_id: uart_4
  on_sms_received:
    - lambda: |-
        std::string str;
        str = sender;
        str = message;
    - sim800l.send_sms:
        message: hello you
        recipient: "+1234"
    - sim800l.dial:
        recipient: "+1234"

tm1651:
  id: tm1651_battery
  clk_pin:
    number: D6
  dio_pin:
    allow_other_uses: true
    number: D5

rf_bridge:
  uart_id: uart_5
  on_code_received:
    - lambda: |-
        uint32_t test;
        test = data.sync;
        test = data.low;
        test = data.high;
        test = data.code;
    - rf_bridge.send_code:
        sync: 0x1234
        low: 0x1234
        high: 0x1234
        code: 0x123456
    - rf_bridge.learn

  on_advanced_code_received:
    - lambda: |-
        uint32_t test;
        std::string test_code;
        test = data.length;
        test = data.protocol;
        test_code = data.code;
    - rf_bridge.start_advanced_sniffing:
    - rf_bridge.stop_advanced_sniffing:
    - rf_bridge.send_advanced_code:
        length: 0x04
        protocol: 0x01
        code: "ABC123"
    - rf_bridge.send_raw:
        raw: "AAA5070008001000ABC12355"

lightwaverf:
  read_pin:
    number: 13
  write_pin:
    allow_other_uses: true
    number: 14
