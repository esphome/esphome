; This PlatformIO project is for development purposes *only*: clang-tidy derives its compilation
; database from here, and IDEs like CLion and VSCode also use it. This does not actually create a
; usable binary.
; It's *not* used during runtime.

[platformio]
default_envs = esp8266, esp32, esp32-idf
src_dir = esphome
include_dir =

[runtime]
; This are the flags as set by the runtime.
build_flags =
    -Wno-unused-but-set-variable
    -Wno-sign-compare

[clangtidy]
; This are the flags for clang-tidy.
build_flags =
    -Wall
    -Wextra
    -Wunreachable-code
    -Wfor-loop-analysis
    -Wshadow-field
    -Wshadow-field-in-constructor
    -Wshadow-uncaptured-local

[common]
lib_deps =
    esphome/noise-c@0.1.4     ; api
    makuna/NeoPixelBus@2.6.9  ; neopixelbus
    esphome/Improv@1.0.0      ; improv_serial / esp32_improv
build_flags =
    -DESPHOME_LOG_LEVEL=ESPHOME_LOG_LEVEL_VERY_VERBOSE
src_filter =
    +<./>
    +<../tests/dummy_main.cpp>
    +<../.temp/all-include.cpp>

[common:arduino]
extends = common
lib_deps =
    ${common.lib_deps}
    ottowinter/AsyncMqttClient-esphome@0.8.6              ; mqtt
    ottowinter/ArduinoJson-esphomelib@5.13.3              ; json
    esphome/ESPAsyncWebServer-esphome@2.1.0               ; web_server_base
    fastled/FastLED@3.3.2                                 ; fastled_base
    mikalhart/TinyGPSPlus@1.0.2                           ; gps
    freekode/TM1651@1.0.1                                 ; tm1651
    glmnet/Dsmr@0.5                                       ; dsmr
    rweather/Crypto@0.2.0                                 ; dsmr
    dudanov/MideaUART@1.1.8                               ; midea
    ; PIO isn't update releases correctly, see:
    ; https://github.com/ToniA/arduino-heatpumpir/commit/0948c619d86407a4e50e8db2f3c193e0576c86fd
    https://github.com/ToniA/arduino-heatpumpir.git#1.0.18  ; heatpumpir
build_flags =
    ${common.build_flags}
    -DUSE_ARDUINO

[common:idf]
extends = common
build_flags =
    ${common.build_flags}
    -DUSE_ESP_IDF

[common:esp8266]
extends = common:arduino
; when changing this also copy it to esphome-docker-base images
platform = platformio/espressif8266 @ 3.2.0
platform_packages =
    platformio/framework-arduinoespressif8266 @ ~3.30002.0

framework = arduino
board = nodemcuv2
lib_deps =
    ${common:arduino.lib_deps}
    ESP8266WiFi                           ; wifi (Arduino built-in)
    Update                                ; ota (Arduino built-in)
    ottowinter/ESPAsyncTCP-esphome@1.2.3  ; async_tcp
build_flags =
    ${common:arduino.build_flags}
    -DUSE_ESP8266
    -DUSE_ESP8266_FRAMEWORK_ARDUINO

[common:esp32-arduino]
extends = common:arduino
; when changing this also copy it to esphome-docker-base images
platform = platformio/espressif32 @ 3.3.2
platform_packages =
    platformio/framework-arduinoespressif32 @ ~3.10006.0

framework = arduino
board = nodemcu-32s
lib_deps =
    ${common:arduino.lib_deps}
    esphome/AsyncTCP-esphome@1.2.2  ; async_tcp
build_flags =
    ${common:arduino.build_flags}
    -DUSE_ESP32
    -DUSE_ESP32_FRAMEWORK_ARDUINO

[common:esp32-idf]
extends = common:idf
; when changing this also copy it to esphome-docker-base images
platform = platformio/espressif32 @ 3.3.2
platform_packages =
    platformio/framework-espidf @ ~3.40300.0

framework = espidf
board = nodemcu-32s
lib_deps =
    ${common:idf.lib_deps}
    espressif/esp32-camera@1.0.0  ; esp32_camera
build_flags =
    ${common:idf.build_flags}
    -Wno-nonnull-compare
    -DUSE_ESP32
    -DUSE_ESP32_FRAMEWORK_ESP_IDF

[env:esp8266]
extends = common:esp8266
build_flags =
    ${common:esp8266.build_flags}
    ${runtime.build_flags}

[env:esp8266-tidy]
extends = common:esp8266
build_flags =
    ${common:esp8266.build_flags}
    ${clangtidy.build_flags}

[env:esp32]
extends = common:esp32-arduino
build_flags =
    ${common:esp32-arduino.build_flags}
    ${runtime.build_flags}

[env:esp32-tidy]
extends = common:esp32-arduino
build_flags =
    ${common:esp32-arduino.build_flags}
    ${clangtidy.build_flags}

[env:esp32-idf]
extends = common:esp32-idf
board_build.esp-idf.sdkconfig_path = .temp/sdkconfig-esp32-idf
build_flags =
    ${common:esp32-idf.build_flags}
    ${runtime.build_flags}

[env:esp32-idf-tidy]
extends = common:esp32-idf
board_build.esp-idf.sdkconfig_path = .temp/sdkconfig-esp32-idf-tidy
build_flags =
    ${common:esp32-idf.build_flags}
    ${clangtidy.build_flags}
